<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>continous improvements on In Pursuit of Delivering Happiness</title><link>https://mmorozkov.github.io/tags/continous-improvements/</link><description>Recent content in continous improvements on In Pursuit of Delivering Happiness</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 04 Apr 2023 16:00:00 +0200</lastBuildDate><atom:link href="https://mmorozkov.github.io/tags/continous-improvements/index.xml" rel="self" type="application/rss+xml"/><item><title>Power of Tiny Continous Improvements</title><link>https://mmorozkov.github.io/posts/engineering-management/tiny-continous-improvements/</link><pubDate>Tue, 04 Apr 2023 16:00:00 +0200</pubDate><guid>https://mmorozkov.github.io/posts/engineering-management/tiny-continous-improvements/</guid><description>Most IT managers and leaders have seen their share of engineering teams that struggle with different large scale problems, like poor code quality, no test coverage, slow code reviews and many others. Often times, teams either back off and settle with what they have or try to fix everything everywhere all at once. Neither seems to be a silver bullet and a great response, as I think there always should be some middle ground.</description></item></channel></rss>